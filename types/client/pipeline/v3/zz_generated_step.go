package client

const (
	StepType                 = "step"
	StepFieldAccesskey       = "accesskey"
	StepFieldAlias           = "alias"
	StepFieldAnswers         = "answerString"
	StepFieldArgs            = "args"
	StepFieldBatchSize       = "batchSize"
	StepFieldBranch          = "branch"
	StepFieldBuildPath       = "buildPath"
	StepFieldConditions      = "conditions"
	StepFieldDeployFlag      = "deploy"
	StepFieldDockerCompose   = "dockerCompose"
	StepFieldDockerfile      = "dockerFileContent"
	StepFieldDockerfilePath  = "dockerFilePath"
	StepFieldEndpoint        = "endpoint"
	StepFieldEntrypoint      = "entrypoint"
	StepFieldEnv             = "env"
	StepFieldExternalId      = "externalId"
	StepFieldGitUser         = "gitUser"
	StepFieldImage           = "image"
	StepFieldImageTag        = "imageTag"
	StepFieldInterval        = "interval"
	StepFieldIsService       = "isService"
	StepFieldName            = "name"
	StepFieldPushFlag        = "push"
	StepFieldRancherCompose  = "rancherCompose"
	StepFieldRepository      = "repository"
	StepFieldSecretkey       = "secretkey"
	StepFieldServiceSelector = "serviceSelector"
	StepFieldServices        = "services"
	StepFieldShellScript     = "shellScript"
	StepFieldStackName       = "stackName"
	StepFieldStartFirst      = "startFirst"
	StepFieldTargetImage     = "targetImage"
	StepFieldTemplates       = "templates"
	StepFieldTimeout         = "timeout"
	StepFieldType            = "type"
	StepFieldWebhook         = "webhook"
)

type Step struct {
	Accesskey       string              `json:"accesskey,omitempty"`
	Alias           string              `json:"alias,omitempty"`
	Answers         string              `json:"answerString,omitempty"`
	Args            string              `json:"args,omitempty"`
	BatchSize       *int64              `json:"batchSize,omitempty"`
	Branch          string              `json:"branch,omitempty"`
	BuildPath       string              `json:"buildPath,omitempty"`
	Conditions      *PipelineConditions `json:"conditions,omitempty"`
	DeployFlag      *bool               `json:"deploy,omitempty"`
	DockerCompose   string              `json:"dockerCompose,omitempty"`
	Dockerfile      string              `json:"dockerFileContent,omitempty"`
	DockerfilePath  string              `json:"dockerFilePath,omitempty"`
	Endpoint        string              `json:"endpoint,omitempty"`
	Entrypoint      string              `json:"entrypoint,omitempty"`
	Env             []string            `json:"env,omitempty"`
	ExternalId      string              `json:"externalId,omitempty"`
	GitUser         string              `json:"gitUser,omitempty"`
	Image           string              `json:"image,omitempty"`
	ImageTag        string              `json:"imageTag,omitempty"`
	Interval        *int64              `json:"interval,omitempty"`
	IsService       *bool               `json:"isService,omitempty"`
	Name            string              `json:"name,omitempty"`
	PushFlag        *bool               `json:"push,omitempty"`
	RancherCompose  string              `json:"rancherCompose,omitempty"`
	Repository      string              `json:"repository,omitempty"`
	Secretkey       string              `json:"secretkey,omitempty"`
	ServiceSelector map[string]string   `json:"serviceSelector,omitempty"`
	Services        []CIService         `json:"services,omitempty"`
	ShellScript     string              `json:"shellScript,omitempty"`
	StackName       string              `json:"stackName,omitempty"`
	StartFirst      *bool               `json:"startFirst,omitempty"`
	TargetImage     string              `json:"targetImage,omitempty"`
	Templates       map[string]string   `json:"templates,omitempty"`
	Timeout         *int64              `json:"timeout,omitempty"`
	Type            string              `json:"type,omitempty"`
	Webhook         *bool               `json:"webhook,omitempty"`
}
